{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HECTOR-HERNANDEZ\\\\Desktop\\\\Education-Platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HECTOR-HERNANDEZ\\\\Desktop\\\\Education-Platzi\\\\platzi-badges\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar BASE_URL = 'http://localhost:3001';\n\nvar delay = function delay(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\n\nvar randomNumber = function randomNumber() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nvar simulateNetworkLatency = function simulateNetworkLatency() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 30;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1500;\n  return delay(randomNumber(min, max));\n};\n\nfunction callApi(_x) {\n  return _callApi.apply(this, arguments);\n}\n\nfunction _callApi() {\n  _callApi = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(endpoint) {\n    var options,\n        url,\n        response,\n        data,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return simulateNetworkLatency();\n\n          case 3:\n            options.headers = {\n              'Content-Type': 'application/json',\n              Accept: 'application/json'\n            };\n            url = BASE_URL + endpoint;\n            _context.next = 7;\n            return fetch(url, options);\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _callApi.apply(this, arguments);\n}\n\nvar api = {\n  badges: {\n    list: function list() {\n      throw new Error('se jodio'); //  return [];\n      //return callApi('/badges');\n    },\n    create: function create(badge) {\n      return callApi(\"/badges\", {\n        method: 'POST',\n        body: JSON.stringify(badge)\n      });\n    },\n    read: function read(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId));\n    },\n    update: function update(badgeId, updates) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: 'PUT',\n        body: JSON.stringify(updates)\n      });\n    },\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove: function remove(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: 'DELETE'\n      });\n    }\n  }\n};\nexport default api;","map":{"version":3,"sources":["C:\\Users\\HECTOR-HERNANDEZ\\Desktop\\Education-Platzi\\platzi-badges\\src\\api.js"],"names":["BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","options","headers","Accept","url","fetch","response","json","data","api","badges","list","Error","create","badge","method","body","JSON","stringify","read","badgeId","update","updates","remove"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,uBAAjB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,WAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAd;AAAA,GAAnB,CAAJ;AAAA,CAAhB;;AACA,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,MAACC,GAAD,uEAAO,CAAP;AAAA,MAAUC,GAAV,uEAAgB,CAAhB;AAAA,SACnBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAD3B;AAAA,CAArB;;AAEA,IAAMK,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAACL,GAAD,uEAAO,EAAP;AAAA,MAAWC,GAAX,uEAAiB,IAAjB;AAAA,SAC7BP,KAAK,CAACK,YAAY,CAACC,GAAD,EAAMC,GAAN,CAAb,CADwB;AAAA,CAA/B;;SAGeK,O;;;;;;;2BAAf,iBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiCC,YAAAA,OAAjC,2DAA2C,EAA3C;AAAA;AAAA,mBACQH,sBAAsB,EAD9B;;AAAA;AAGEG,YAAAA,OAAO,CAACC,OAAR,GAAkB;AAChB,8BAAgB,kBADA;AAEhBC,cAAAA,MAAM,EAAE;AAFQ,aAAlB;AAKMC,YAAAA,GARR,GAQclB,QAAQ,GAAGc,QARzB;AAAA;AAAA,mBASyBK,KAAK,CAACD,GAAD,EAAMH,OAAN,CAT9B;;AAAA;AASQK,YAAAA,QATR;AAAA;AAAA,mBAUqBA,QAAQ,CAACC,IAAT,EAVrB;;AAAA;AAUQC,YAAAA,IAVR;AAAA,6CAYSA,IAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,IAAMC,GAAG,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IADM,kBACC;AACH,YAAM,IAAIC,KAAJ,CAAU,UAAV,CAAN,CADG,CAEL;AACA;AACD,KALK;AAMNC,IAAAA,MANM,kBAMCC,KAND,EAMQ;AACZ,aAAOf,OAAO,YAAY;AACxBgB,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAFkB,OAAZ,CAAd;AAID,KAXK;AAYNK,IAAAA,IAZM,gBAYDC,OAZC,EAYQ;AACZ,aAAOrB,OAAO,mBAAYqB,OAAZ,EAAd;AACD,KAdK;AAeNC,IAAAA,MAfM,kBAeCD,OAfD,EAeUE,OAfV,EAemB;AACvB,aAAOvB,OAAO,mBAAYqB,OAAZ,GAAuB;AACnCL,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,OAAf;AAF6B,OAAvB,CAAd;AAID,KApBK;AAqBN;AACAC,IAAAA,MAtBM,kBAsBCH,OAtBD,EAsBU;AACd,aAAOrB,OAAO,mBAAYqB,OAAZ,GAAuB;AACnCL,QAAAA,MAAM,EAAE;AAD2B,OAAvB,CAAd;AAGD;AA1BK;AADE,CAAZ;AA+BA,eAAeN,GAAf","sourcesContent":["const BASE_URL = 'http://localhost:3001';\r\n\r\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max));\r\n\r\nasync function callApi(endpoint, options = {}) {\r\n  await simulateNetworkLatency();\r\n\r\n  options.headers = {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n  };\r\n\r\n  const url = BASE_URL + endpoint;\r\n  const response = await fetch(url, options);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n\r\nconst api = {\r\n  badges: {\r\n    list() {\r\n        throw new Error('se jodio');\r\n      //  return [];\r\n      //return callApi('/badges');\r\n    },\r\n    create(badge) {\r\n      return callApi(`/badges`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(badge),\r\n      });\r\n    },\r\n    read(badgeId) {\r\n      return callApi(`/badges/${badgeId}`);\r\n    },\r\n    update(badgeId, updates) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updates),\r\n      });\r\n    },\r\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\r\n    remove(badgeId) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'DELETE',\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;"]},"metadata":{},"sourceType":"module"}